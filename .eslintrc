{
  "parser": "@typescript-eslint/parser",
  "plugins": ["@typescript-eslint", "react", "react-hooks", "import"],
  "extends": [
    "plugin:@typescript-eslint/recommended",
    "prettier/@typescript-eslint",
    "prettier",
    "prettier/react"
  ],
  "env": {
    "browser": true,
    "commonjs": true,
    "es6": true,
    "node": true
  },
  "parserOptions": {
    "ecmaFeatures": {
      "jsx": true
    },
    "useJSXTextNode": true
  },
  "rules": {
    "react/jsx-filename-extension": [
      1,
      {
        "extensions": [".js", ".jsx", ".tsx"]
      }
    ],
    "react/no-multi-comp": 0,
    /**
     * We use TSX for all our react components, so we can turn this rule off (it triggers on inline renderFunctions as a false positive)
     */
    "react/prop-types": "off",
    "import/extensions": [
      1,
      "never",
      {
        "svg": "always"
      }
    ],
    "comma-dangle": ["off"],
    "no-use-before-define": ["off"],
    "react/destructuring-assignment": ["off"],
    "no-param-reassign": ["off"],
    "import/prefer-default-export": ["off"],
    "import/no-extraneous-dependencies": ["off"],
    "@typescript-eslint/no-object-literal-type-assertion": 0,
    "@typescript-eslint/explicit-function-return-type": 0,
    "@typescript-eslint/explicit-member-accessibility": 0,
    "@typescript-eslint/ban-ts-ignore": 0,
    "react-hooks/rules-of-hooks": "error",
    "no-restricted-syntax": [
      "error",
      "ForInStatement",
      "LabeledStatement",
      "WithStatement"
    ],
    "react/jsx-one-expression-per-line": ["off"],
    "no-nested-ternary": "off",
    "no-console": "error",
    "react/jsx-uses-react": 2,
    "react/jsx-uses-vars": 2
  }
}
